<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="userMapper">

	<resultMap id="userResultSet" type="user">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_PHONE" property="userPhone" />
		<result column="USER_BIRTH" property="userBirth" />
		<result column="USER_EMAIL" property="userEmail" />
		<result column="USER_STATUS" property="userStatus" />
	</resultMap>
	
	
	<!-- 로그인용 쿼리문 -->
	<select id="loginUser" parameterType="user" resultMap="userResultSet">
	
	SELECT
		     USER_NO
		    ,USER_ID
		    ,USER_PWD
		    ,USER_NAME
		    ,USER_PHONE
		    ,TO_CHAR(USER_BIRTH, 'YYYY-MM-DD') AS USER_BIRTH
		    ,USER_EMAIL
		    ,USER_STATUS
	FROM
	   		USERS
	WHERE
			USER_ID = #{userId}
	  AND
	 		USER_STATUS ='Y'
	</select>
	
	<!-- 회원 가입용 쿼리 -->
	<!-- parameterType은 MyBatis에서 SQL 문을 실행할 때 SQL 쿼리에 전달되는 파라미터의 타입을 나타냅니다.
	 즉, SQL 문에서 사용되는 매개변수의 자료형을 명시하는 역할을 합니다. -->
	<insert id="insertUser" parameterType="user">
	INSERT
		INTO
			USERS
			(
			  USER_NO
			 ,USER_ID
			 ,USER_PWD
			 ,USER_NAME
			 ,USER_PHONE
			 ,USER_BIRTH
			 ,USER_EMAIL
			)
	VALUES
			(
			 SEQ_UNO.NEXTVAL
			,#{userId}
			,#{userPwd}
			,#{userName}
			,#{userPhone}
			,#{userBirth}
			,#{userEmail}
			
			)
			
	
	</insert>
	
	
	<!-- 회원정보 수정 쿼리 -->
	
	<update id="updateUser" parameterType="user">
		UPDATE
				USERS
		   SET
				 USER_PWD = #{userPwd}
				,USER_PHONE = #{userPhone}
				,USER_EMAIL = #{userEmail}
				,USER_BIRTH = #{userBirth}	
		
		WHERE
		
				 USER_NO = #{userNo}	
	</update>
	
	<!-- 마이페이지 졿아요, 리뷰, 예약한 수 보여주는 쿼리 -->
	 <select id="myPage" resultType="map">
        SELECT 
            (SELECT COUNT(*) FROM STORE_LIKE WHERE USER_NO = #{userNo}) AS count_store_like,
            (SELECT COUNT(*) FROM REVIEW WHERE USER_NO = #{userNo}) AS count_review,
            (SELECT COUNT(*) FROM RESERVATION WHERE USER_NO = #{userNo}) AS count_reservation
        FROM DUAL
    </select>
    
    <!-- 회원정보 탈퇴 쿼리 -->
    <update id="deleteUser" parameterType="_int">
    	UPDATE
				USERS
		   SET
				 USER_STATUS = 'N'
		WHERE
				 USER_NO = #{userNo}
    
    </update>
	

</mapper>
