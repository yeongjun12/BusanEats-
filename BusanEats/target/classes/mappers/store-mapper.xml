<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="storeMapper">


	<resultMap id="storeResultSet" type="store">
		<result column="UC_SEQ"  property="ucSeq"/>
		<result column="MAIN_TITLE" property="mainTitle"/>
		<result column="GUGUN_NM"        property="gugunNm"/>
		<result column="ADDR1"  property="addr1"/>
		<result column="CNTCT_TEL"  property="cntctTel"/>
		<result column="USAGE_DAY_WEEK_AND_TIME"  property="usageDayWeekAndTime"/>
		<result column="RPRSNTV_MENU"  property="reprsntvMenu"/>
		<result column="MAIN_IMG_NORMAL"  property="mainImgNormal"/>
		<result column="MAIN_IMG_THUMB"  property="mainImgThumb"/>
		<result column="ITEMCNTNTS"  property="itemCntnts"/>
		<result column="LAT"  property="lat"/>
		<result column="LNG"  property="lng"/>
		<result column="COUNT"  property="count"/>
	</resultMap>
	
	<resultMap id="likeResultSet" type="like">
		<result column="USER_NO" property="userNo"/>
		<result column="UC_SEQ" property="ucSeq"/>
	</resultMap>
	
	
	<insert id="saveToDataBase" parameterType="store">
		INSERT
			INTO
				STORE
				(
				  UC_SEQ
				  ,MAIN_TITLE
				  ,GUGUN_NM
				  ,ADDR1
				  ,CNTCT_TEL
				  ,USAGE_DAY_WEEK_AND_TIME
				  ,RPRSNTV_MENU
				  ,MAIN_IMG_NORMAL
				  ,MAIN_IMG_THUMB
				  ,ITEMCNTNTS
				  ,LAT
				  ,LNG
				)
		VALUES
				(
				#{ucSeq}
				,#{mainTitle}
				,#{gugunNm}
				,#{addr1}
				,#{cntctTel}
				,#{usageDayWeekAndTime}
				,#{reprsntvMenu}
				,#{mainImgNormal}
				,#{mainImgThumb}
				,#{itemCntnts}
				,#{lat}
				,#{lng}
				)
		
	</insert>
	
	<select id="selectStoreList" resultMap="storeResultSet" parameterType="String" >
		SELECT
				*
		FROM
			STORE
		WHERE 
			GUGUN_NM= #{gugunNm}
	</select>
	
	<select id="selectStoreLike" parameterType="_int" resultType="int">
		SELECT
        		COUNT(*)
		FROM 
        		STORE_LIKE
        WHERE
        		UC_SEQ = #{ucSeq}
	</select>
	
	
	
	<update id="increaseCount">
		UPDATE
				STORE
		SET
				COUNT = COUNT + 1
		WHERE
				UC_SEQ = #{ucSeq}
	</update>
	
	<select id="selectStoreDetail" resultMap="storeResultSet" parameterType="_int">
		SELECT
				 *
   		 FROM
				STORE
    	WHERE 
    			UC_SEQ = #{ucSeq}
	</select>
	
	<select id="selectLikeList"  resultMap="likeResultSet" parameterType="_int">
		SELECT
				UC_SEQ,
				USER_NO
		FROM
				STORE_LIKE
		WHERE
				USER_NO = #{userNo}
	</select>
	
	<!-- 식당 리뷰 평좀 평균 조회 쿼리 -->
	<select id="selectAvgRating" parameterType="_int" resultType="double"> <!-- null일 경우 0.0으로 -->
		SELECT
		    COALESCE(TRUNC(AVG(REVIEW_RATING), 1), 0.0) AS average_rating
		FROM 
		    REVIEW
		WHERE 
		    uc_seq = #{ucSeq}
	</select>
	
	<!-- 식당 리뷰 숫자 카운트 쿼리 -->
	<select id="selectReviewCount" parameterType="_int" resultType="int">
		SELECT
				COUNT(*)
		FROM
				REVIEW
		WHERE
				UC_SEQ = #{ucSeq}
		AND
				REVIEW_STATUS = 'Y'
	</select>
	
	<!-- 식당 좋아요수 카운트 쿼리 -->
	<select id="selectLikeCount" parameterType="_int" resultType="int">
		SELECT
		    	COUNT(*)
		FROM 
				STORE S, STORE_LIKE L
		WHERE 
				S.UC_SEQ= L.UC_SEQ
		AND 
				S.UC_SEQ = #{ucSeq}
	</select>
	
	<!-- 검색한 식당 리스트 조회 쿼리 -->
	<select id="searchStore" resultMap="storeResultSet" parameterType="String" >
	        
	     SELECT 
		    S.UC_SEQ,  
		    S.MAIN_TITLE, 
		    S.GUGUN_NM,
		    S.ADDR1,
		    S.CNTCT_TEL,
		    S.USAGE_DAY_WEEK_AND_TIME,
		    S.RPRSNTV_MENU,
		    S.MAIN_IMG_NORMAL,
		    S.MAIN_IMG_THUMB,
		    S.ITEMCNTNTS,
		    S.LAT,
		    S.LNG,
		    S.COUNT,
		    COUNT(R.UC_SEQ) AS REVIEW_COUNT  <!-- 각 UC_SEQ에 대한 리뷰의 개수를 셉니다. --> 
		FROM 
		    STORE S
		LEFT JOIN 
		    REVIEW R ON S.UC_SEQ = R.UC_SEQ  <!-- STORE와 REVIEW 테이블을 UC_SEQ를 기준으로 조인합니다. --> 
		WHERE 
		    S.MAIN_TITLE LIKE '%' || #{query} || '%' 
		    OR S.RPRSNTV_MENU LIKE '%' || #{query} || '%' <!-- MAIN_TITLE 또는 RPRSNTV_MENU에 '고기'가 포함된 행을 필터링합니다. -->  
		GROUP BY 
		    S.UC_SEQ,  
		    S.MAIN_TITLE, 
		    S.GUGUN_NM,
		    S.ADDR1,
		    S.CNTCT_TEL,
		    S.USAGE_DAY_WEEK_AND_TIME,
		    S.RPRSNTV_MENU,
		    S.MAIN_IMG_NORMAL,
		    S.MAIN_IMG_THUMB,
		    S.ITEMCNTNTS,
		    S.LAT,
		    S.LNG,
		    S.COUNT  
		ORDER BY 
		    (REVIEW_COUNT + S.COUNT) DESC
	</select>
	
	<!-- 지역별 TOP5 쿼리 -->
	<select id="selectRegionTop5" resultMap="storeResultSet" parameterType="String">
		SELECT 
    S.*                                <!-- 식당의 모든 정보를 조회 -->
FROM (
    SELECT 
        S.UC_SEQ,                               <!-- 식당 고유번호 -->
        S.MAIN_TITLE,                           <!-- 식당 이름 -->
        COUNT(L.UC_SEQ) AS like_count,          <!-- 좋아요 수 -->
        COUNT(CASE WHEN R.REVIEW_STATUS = 'Y' THEN 1 END) AS review_count, <!-- 리뷰 수 -->
        (COUNT(L.UC_SEQ) + COUNT(CASE WHEN R.REVIEW_STATUS = 'Y' THEN 1 END)) AS total_count <!-- 좋아요 수 + 리뷰 수 -->
    FROM 
        STORE S
        JOIN STORE_LIKE L ON S.UC_SEQ = L.UC_SEQ        <!-- 좋아요 테이블과 조인 -->
        LEFT JOIN REVIEW R ON S.UC_SEQ = R.UC_SEQ       <!-- 리뷰 테이블과 조인 -->
    WHERE 
        S.gugun_nm = #{region}                         <!-- 지정된 지역에 위치한 식당 조회 -->
    GROUP BY 
        S.UC_SEQ, S.MAIN_TITLE                         <!-- 식당별 그룹화 -->
    ORDER BY 
        total_count DESC                               <!-- 좋아요 수와 리뷰 수 합산한 값으로 정렬 -->
) T
JOIN STORE S ON T.UC_SEQ = S.UC_SEQ                   <!-- 원래의 식당 테이블과 다시 조인하여 모든 정보 조회 -->
WHERE ROWNUM BETWEEN 1 AND 5                        <!-- 상위 5개 식당 조회 -->
		
		
	
	</select>

</mapper>